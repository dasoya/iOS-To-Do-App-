//
// Flashcard.swift
// ios to do app
// Created by Shivam Singh Rajput on 27.01.23.
//

import Foundation

/// Model for a Flashcard
class Flashcard: ObservableObject, Identifiable, Codable {
    /// ID of the flashcard, generated by UUID().uuidString
    @Published var id = UUID().uuidString
    /// Text that appears on the front side of the flashcard
    @Published var front: String = ""
    /// Text that appears on the back side of the flashcard
    @Published var back: String = ""
    /// Coding keys to map between the class and its encoded form
    enum CodingKeys: CodingKey {
        case id
        case front
        case back
    }
    
    /// Initializes a new flashcard with empty front and back text
    init() {
        
    }
    
    /// Initializes a flashcard from its decoded form
    required init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: CodingKeys.self)
        id = try values.decode(String.self, forKey: .id)
        front = try values.decode(String.self, forKey: .front)
        back = try values.decode(String.self, forKey: .back)
    }
    
    /// Encodes a flashcard into its encoded form
    func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(id, forKey: .id)
        try container.encode(front, forKey: .front)
        try container.encode(back, forKey: .back)
    }
}
